//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "attended_meetings")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub meeting_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub student_id: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub subject_id: i32,
    #[sea_orm(column_type = "Float")]
    pub percentage: f32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::meetings::Entity",
        from = "Column::MeetingId",
        to = "super::meetings::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Meetings,
    #[sea_orm(
        belongs_to = "super::subjects_attendies::Entity",
        from = "(Column::StudentId, Column::SubjectId)",
        to = "(super::subjects_attendies::Column::StudentId, super::subjects_attendies::Column::SubjectId)",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    SubjectsAttendies,
}

impl Related<super::meetings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Meetings.def()
    }
}

impl Related<super::subjects_attendies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubjectsAttendies.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
