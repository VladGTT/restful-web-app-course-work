//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "students")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, unique)]
    pub email: String,
    pub group: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::subjects_attendies::Entity")]
    SubjectsAttendies,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::Email",
        to = "super::users::Column::Email",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users,
}

impl Related<super::subjects_attendies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SubjectsAttendies.def()
    }
}

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Users.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
